#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Fri Jul 31 13:33:56 2009
'''
VISUM add-in Import Google Transit Feed

Internationalisation for German and English has been implemented.

Notice:
* for debugging the add-in please set VISUMINTEGRATED = False

Add-in description: Help.htm

Date: 31.07.2009
Author: Yvonne Huebner
Contact: yvonne.huebner@ptv.de
Company: PTV AG'''
import wx
import wx.html
import os
import re
import gettext
import win32com.client as com
import datetime
import time
from cPickle import dumps, loads

VISUMINTEGRATED = False

class MyHtmlFrame(wx.Frame):
    # Help html frame
    def __init__(self, parent, title):
        wx.Frame.__init__(self, parent, -1, title, size=(640,480))
        html = wx.html.HtmlWindow(self)
        html.LoadFile(os.path.join(g_currentPath + _("\\Help.htm")))

class GoogleTransitDlg(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GoogleTransitDlg.__init__
        kwds["style"] = wx.CAPTION|wx.STAY_ON_TOP
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer_1_staticbox = wx.StaticBox(self, -1, _("Date settings:"))
        self.label_1 = wx.StaticText(self, -1, _("Source directory:"))
        self.txt_sourceDir = wx.TextCtrl(self, -1, "")
        self.btn_dirDlg = wx.Button(self, -1, _("..."))
        self.cb_filterDate = wx.CheckBox(self, -1, _("Use filter date"))
        self.label_2 = wx.StaticText(self, -1, _("Filter date (dd.mm.yyyy):  "))
        self.datePicker = wx.TextCtrl(self, -1, "", style=wx.TE_RIGHT)
        self.btn_help = wx.Button(self, -1, _("Help"))
        self.btn_ok = wx.Button(self, -1, _("OK"))
        self.btn_cancel = wx.Button(self, -1, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.On_openDirDlg, self.btn_dirDlg)
        self.Bind(wx.EVT_BUTTON, self.On_help, self.btn_help)
        self.Bind(wx.EVT_BUTTON, self.On_OK, self.btn_ok)
        self.Bind(wx.EVT_BUTTON, self.On_cancel, self.btn_cancel)

        global g_currentPath
        g_currentPath = os.getcwd()

        defaultParam = { "SourceDirectory": "",
                         "UseFilterDate": False,
                         "FilterDate": "30.01.2007"}

        param = defaultParam

##        if Parameter.Data != "":
##            tmppara = Parameter.Data.encode("iso-8859-15")
##            storedparam = loads(tmppara)
##            param.update(storedparam)

        self.txt_sourceDir.SetValue(param["SourceDirectory"])
        self.cb_filterDate.SetValue(param["UseFilterDate"])
        self.datePicker.SetValue(param["FilterDate"])
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: GoogleTransitDlg.__set_properties
        self.SetTitle(_("Import Google Transit Feed"))
        self.txt_sourceDir.SetMinSize((250, -1))
        self.btn_dirDlg.SetMinSize((23, 23))
        self.label_2.SetMinSize((-1, -1))
        self.btn_help.SetMinSize((85, 23))
        self.btn_ok.SetMinSize((85, 23))
        self.btn_cancel.SetMinSize((85, 23))
        self.datePicker.SetMinSize((65, -1))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: GoogleTransitDlg.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(4, 3, 0, 0)
        grid_sizer_2 = wx.GridSizer(1, 4, 0, 0)
        grid_sizer_6 = wx.FlexGridSizer(2, 1, 0, 0)
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.HORIZONTAL)
        grid_sizer_4 = wx.FlexGridSizer(1, 4, 0, 0)
        grid_sizer_7 = wx.FlexGridSizer(1, 4, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_7.Add(self.label_1, 0, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL, 5)
        grid_sizer_7.Add((0, 20), 0, wx.EXPAND, 0)
        grid_sizer_7.Add(self.txt_sourceDir, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        grid_sizer_7.Add(self.btn_dirDlg, 0, wx.TOP|wx.BOTTOM|wx.ALIGN_RIGHT, 5)
        grid_sizer_7.AddGrowableCol(1)
        grid_sizer_7.AddGrowableCol(2)
        grid_sizer_7.AddGrowableCol(3)
        grid_sizer_6.Add(grid_sizer_7, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(self.cb_filterDate, 0, wx.LEFT|wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL, 10)
        grid_sizer_4.Add((70, 20), 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_2, 0, wx.LEFT|wx.TOP|wx.BOTTOM|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 10)
        grid_sizer_4.Add(self.datePicker, 0, wx.TOP|wx.BOTTOM|wx.ALIGN_RIGHT, 10)
        grid_sizer_4.AddGrowableCol(2)
        grid_sizer_4.AddGrowableCol(3)
        sizer_1.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_6.Add(sizer_1, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 15)
        grid_sizer_6.AddGrowableCol(0)
        grid_sizer_1.Add(grid_sizer_6, 1, wx.EXPAND, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_2.Add(self.btn_help, 0, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.ALIGN_BOTTOM, 5)
        grid_sizer_2.Add((20, 20), 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.btn_ok, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_BOTTOM, 5)
        grid_sizer_2.Add(self.btn_cancel, 0, wx.LEFT|wx.TOP|wx.BOTTOM|wx.ALIGN_RIGHT|wx.ALIGN_BOTTOM, 5)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        grid_sizer_1.Add((20, 15), 0, 0, 0)
        grid_sizer_1.Add((20, 15), 0, 0, 0)
        grid_sizer_1.Add((20, 15), 0, 0, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        grid_sizer_1.AddGrowableRow(1)
        grid_sizer_1.AddGrowableCol(1)
        self.Layout()
        # end wxGlade

    def ConvertDate2String(self, date):
        # Converts a date into a string
        dateStr = str(date)
        dateStr = re.split('[/ ]', dateStr)
        return dateStr

    def CheckDate(self, date):
        # Checks if date string is a valid date
        pattern = "(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d"
        result = re.match(pattern, date)
        if result is None:
            return False
        else:
            return True

    def On_help(self, event): # wxGlade: GoogleTransitDlg.<event_handler>
        #Is executed when clicking on the "Help" button and opens
        #a htm-file with the help description of the add-in#
        frm = MyHtmlFrame(self, _("Google Transit import Help"))
        frm.Show()

    def On_OK(self, event): # wxGlade: GoogleTransitDlg.<event_handler>
        param = dict()
        param["SourceDirectory"] = self.txt_sourceDir.GetValue()
        param["UseFilterDate"] = self.cb_filterDate.GetValue()
        date = self.datePicker.GetValue()
        dateIsValid = self.CheckDate(date)

        if dateIsValid == True:
            #date = self.Convert_ddmmyyyyTOyyyymmdd(date)
            param["FilterDate"] = date
        else:
            self.ReportError(_("Please type a valid date with format dd.mm.yyyy."),"")
            return

        Parameter.Data = dumps(param)
        Parameter.OK = True
        self.Destroy()

    def On_cancel(self, event): # wxGlade: GoogleTransitDlg.<event_handler>
        # Cancels the application
        self.Destroy()

    def On_openDirDlg(self, event): # wxGlade: GoogleTransitDlg.<event_handler>
        filedlg = wx.DirDialog(self,_("Choose dir with Google data:"), r"D:\Projekte\2_Spec_GoogleTransitFeedImport\GoogleTransit\Austin_feed")
        if filedlg.ShowModal() == wx.ID_OK:
            path = filedlg.GetPath()
            self.txt_sourceDir.SetValue(path)
            filedlg.Destroy()

    def ReportError(self, msg, exception):
        #Reports an error in a message box with the 'msg' entry.#
        wx.MessageBox(message = msg + " " + str(exception),
                      caption =_("Error"),
                      style=wx.ICON_ERROR)

# end of class GoogleTransitDlg

if not VISUMINTEGRATED:
    #Get Visum object from com interface
    Visum = com.Dispatch("Visum.Visum.115")

app = wx.PySimpleApp(False)# If True Traceback window in VISUM appears
wx.InitAllImageHandlers()

try:
    gettext.install("GoogleTransit",".\\locale") # replace ZoneQuantiles with the appropriate dirname
    languagemap = { "DEU" : 'de_DE' }
    code = languagemap.get(Visum.GetCurrentLanguage(), 'en_US') # if language not available, use English
    VISUMLANGUAGE = code
    translation = gettext.translation("GoogleTransit", "./locale", languages=[code])
    translation.install()

except Exception,e:
    wx.MessageBox(_("Gettext failed."),
                      caption =_("Error"),
                      style=wx.ICON_ERROR)


GoogleTransitDlg = GoogleTransitDlg(None, -1, "Import Google Transit Feed")
app.SetTopWindow(GoogleTransitDlg)
GoogleTransitDlg.Show()
app.MainLoop()